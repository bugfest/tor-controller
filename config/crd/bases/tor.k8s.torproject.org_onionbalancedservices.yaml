
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: onionbalancedservices.tor.k8s.torproject.org
spec:
  group: tor.k8s.torproject.org
  names:
    kind: OnionBalancedService
    listKind: OnionBalancedServiceList
    plural: onionbalancedservices
    shortNames:
    - onionha
    - oha
    - obs
    singular: onionbalancedservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.hostname
      name: Hostname
      type: string
    - jsonPath: .spec.backends
      name: Backends
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: OnionBalancedService is the Schema for the onionbalancedservices
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OnionBalancedServiceSpec defines the desired state of OnionBalancedService
            properties:
              backends:
                format: int32
                maximum: 8
                minimum: 1
                type: integer
              privateKeySecret:
                description: SecretReference represents a Secret Reference
                properties:
                  key:
                    type: string
                  name:
                    description: Name is unique within a namespace to reference a
                      secret resource.
                    type: string
                type: object
              serviceMonitor:
                default: false
                type: boolean
              template:
                properties:
                  spec:
                    description: OnionServiceSpec defines the desired state of OnionService
                    properties:
                      extraConfig:
                        type: string
                      masterOnionAddress:
                        type: string
                      privateKeySecret:
                        description: SecretReference represents a Secret Reference
                        properties:
                          key:
                            type: string
                          name:
                            description: Name is unique within a namespace to reference
                              a secret resource.
                            type: string
                        type: object
                      rules:
                        items:
                          properties:
                            backend:
                              description: Backend selector
                              properties:
                                resource:
                                  description: Resource is an ObjectRef to another
                                    Kubernetes resource in the namespace of the Ingress
                                    object. If resource is specified, a service.Name
                                    and service.Port must not be specified. This is
                                    a mutually exclusive setting with "Service".
                                  properties:
                                    apiGroup:
                                      description: APIGroup is the group for the resource
                                        being referenced. If APIGroup is not specified,
                                        the specified Kind must be in the core API
                                        group. For any other third-party types, APIGroup
                                        is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                service:
                                  description: Service references a Service as a Backend.
                                    This is a mutually exclusive setting with "Resource".
                                  properties:
                                    name:
                                      description: Name is the referenced service.
                                        The service must exist in the same namespace
                                        as the Ingress object.
                                      type: string
                                    port:
                                      description: Port of the referenced service.
                                        A port name or port number is required for
                                        a IngressServiceBackend.
                                      properties:
                                        name:
                                          description: Name is the name of the port
                                            on the Service. This is a mutually exclusive
                                            setting with "Number".
                                          type: string
                                        number:
                                          description: Number is the numerical port
                                            number (e.g. 80) on the Service. This
                                            is a mutually exclusive setting with "Name".
                                          format: int32
                                          type: integer
                                      type: object
                                  required:
                                  - name
                                  type: object
                              type: object
                            port:
                              description: Port publish as
                              properties:
                                name:
                                  description: Name is the name of the port on the
                                    Service. This is a mutually exclusive setting
                                    with "Number".
                                  type: string
                                number:
                                  description: Number is the numerical port number
                                    (e.g. 80) on the Service. This is a mutually exclusive
                                    setting with "Name".
                                  format: int32
                                  type: integer
                              type: object
                          type: object
                        type: array
                      serviceMonitor:
                        default: false
                        type: boolean
                      version:
                        default: 3
                        enum:
                        - 0
                        - 2
                        - 3
                        format: int32
                        type: integer
                    type: object
                type: object
              version:
                default: 3
                enum:
                - 3
                format: int32
                type: integer
            required:
            - backends
            type: object
          status:
            description: OnionBalancedServiceStatus defines the observed state of
              OnionBalancedService
            properties:
              backends:
                additionalProperties:
                  description: OnionServiceStatus defines the observed state of OnionService
                  properties:
                    hostname:
                      type: string
                    targetClusterIP:
                      type: string
                  type: object
                type: object
              hostname:
                type: string
              targetClusterIP:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
